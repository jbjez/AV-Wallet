import 'package:logging/logging.dart';
import 'services/hive_service.dart';
import 'services/catalogue_migration_service.dart';

void main() async {
  // Configurer le logging
  Logger.root.level = Level.ALL;
  Logger.root.onRecord.listen((record) {
    print('${record.level.name}: ${record.time}: ${record.message}');
  });

  try {
    print('üöÄ Starting video products migration...');
    
    // Initialiser Hive
    await HiveService.init();
    print('‚úÖ Hive initialized');
    
    // V√©rifier l'√©tat actuel
    final totalItems = await CatalogueMigrationService.getTotalItemCount();
    final existingCategories = await CatalogueMigrationService.getExistingCategories();
    
    print('üìä Current state:');
    print('   - Total items in Hive: $totalItems');
    print('   - Existing categories: ${existingCategories.join(', ')}');
    
    // Ex√©cuter la migration des nouvelles cat√©gories
    await CatalogueMigrationService.migrateNewCategories();
    
    // V√©rifier le r√©sultat
    final newTotalItems = await CatalogueMigrationService.getTotalItemCount();
    final newCategories = await CatalogueMigrationService.getExistingCategories();
    
    print('üìà After migration:');
    print('   - Total items in Hive: $newTotalItems');
    print('   - New categories: ${newCategories.join(', ')}');
    print('   - Items added: ${newTotalItems - totalItems}');
    
    print('‚úÖ Video products migration completed successfully!');
    
  } catch (e, stackTrace) {
    print('‚ùå Error during migration: $e');
    print('Stack trace: $stackTrace');
  } finally {
    // Fermer Hive
    await HiveService.close();
  }
}
